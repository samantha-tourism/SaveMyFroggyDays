[{"/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/index.js":"1","/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/App.js":"2","/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/Header.js":"3","/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/Result.js":"4","/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/Weather.js":"5","/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/CardContainer.js":"6","/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/ApiKeyTourism.js":"7","/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/ApiKeyMeteo.js":"8","/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/Search.js":"9","/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/Filter.js":"10"},{"size":219,"mtime":1614336938074,"results":"11","hashOfConfig":"12"},{"size":1560,"mtime":1614336983866,"results":"13","hashOfConfig":"12"},{"size":311,"mtime":1614336938072,"results":"14","hashOfConfig":"12"},{"size":4093,"mtime":1614336983895,"results":"15","hashOfConfig":"12"},{"size":4604,"mtime":1614336983896,"results":"16","hashOfConfig":"12"},{"size":1855,"mtime":1614336983892,"results":"17","hashOfConfig":"12"},{"size":102,"mtime":1614337084478,"results":"18","hashOfConfig":"12"},{"size":78,"mtime":1614337099492,"results":"19","hashOfConfig":"12"},{"size":6325,"mtime":1614336983895,"results":"20","hashOfConfig":"12"},{"size":543,"mtime":1614336983893,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wehd2p",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/index.js",[],"/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/App.js",[],"/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/Header.js",[],"/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/Result.js",["44"],"import React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport CardContainer from \"./CardContainer\";\r\nimport APIKEY from \"./ApiKeyTourism\";\r\n\r\nimport \"./Result.css\";\r\nconst limit = 1;\r\nconst radius = 1000; // in meters\r\n\r\nconst Result = (props) => {\r\n  const [arrayActivities, setArrayActivities] = useState([]);\r\n  const [offset, setOffset] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [city, setCity] = useState(\"\");\r\n  const [rain, setRain] = useState(props.rain);\r\n  const inter = useRef(null);\r\n  const clear = () => {\r\n    window.clearInterval(inter.current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function request(props, offset) {\r\n      let arrayAct = [];\r\n      const coordsCity = await fetch(\r\n        `http://api.opentripmap.com/0.1/en/places/geoname?apikey=${APIKEY}&name=${props.city}`,\r\n      ).then((res) => res.json());\r\n      if (coordsCity.hasOwnProperty(\"error\")) arrayAct = \"404\";\r\n      else {\r\n        const { lat, lon } = coordsCity;\r\n        clear();\r\n\r\n        if (city !== props.city || rain !== props.rain) {\r\n          // when the user makes a new research, reset\r\n          setOffset(0);\r\n          setCity(props.city);\r\n          setRain(props.rain);\r\n          setArrayActivities([]);\r\n        }\r\n\r\n        // can't forEach when using async funcions\r\n        let i = 0;\r\n        inter.current = setInterval(async function () {\r\n          const listActivities = await fetch(\r\n            `https://api.opentripmap.com/0.1/en/places/radius?apikey=${APIKEY}&radius=${radius}&limit=${limit}&offset=${offset}&lon=${lon}&lat=${lat}&rate=1&format=json`,\r\n          ).then((res) => res.json());\r\n          if (!listActivities[i] || listActivities.length === 0) {\r\n            clear();\r\n            return;\r\n          }\r\n          const activitiesData = await fetch(\r\n            `https://api.opentripmap.com/0.1/en/places/xid/${listActivities[i].xid}?apikey=${APIKEY}`,\r\n          ).then((res) => res.json());\r\n          if (\r\n            activitiesData.kinds &&\r\n            !(\r\n              activitiesData.kinds.includes(\"accomodation\") ||\r\n              activitiesData.kinds.includes(\"unclassified_objects\") ||\r\n              activitiesData.kinds.includes(\"banks\") ||\r\n              activitiesData.kinds.includes(\"transport\") ||\r\n              activitiesData.kinds.includes(\"industrial\")\r\n            ) &&\r\n            (!props.rain ||\r\n              !(\r\n                activitiesData.kinds.includes(\"natural\") ||\r\n                activitiesData.kinds.includes(\"historic\") ||\r\n                activitiesData.kinds.includes(\"architecture\") ||\r\n                activitiesData.kinds.includes(\"urban_environment\")\r\n              )) &&\r\n            (props.checkedAdult || !activitiesData.kinds.includes(\"adult\")) &&\r\n            (props.checkedRelig ||\r\n              !activitiesData.kinds.includes(\"religion\")) &&\r\n            (props.checkedRest || !activitiesData.kinds.includes(\"foods\")) &&\r\n            (props.checkedSport || !activitiesData.kinds.includes(\"sport\")) &&\r\n            (props.checkedShop || !activitiesData.kinds.includes(\"shops\"))\r\n          ) {\r\n            arrayAct.push(activitiesData);\r\n          }\r\n\r\n          i++;\r\n          setOffset(offset + 1);\r\n          setArrayActivities([...arrayActivities, ...arrayAct]);\r\n          setLoading(false);\r\n          setLoading(true);\r\n        }, 1000);\r\n      }\r\n    }\r\n    if (props.city === \"404\") return;\r\n    const fetchData = async () => {\r\n      await request(props, offset);\r\n    };\r\n    fetchData();\r\n  }, [arrayActivities, props]);\r\n\r\n  useEffect(() => {}, [loading]);\r\n\r\n  return (\r\n    <div className=\"searchAndResult\">\r\n      <div className=\"result\">\r\n        {props.city ? (\r\n          props.city === \"404\" ? (\r\n            <h2 id=\"error404\">\r\n              Sorry we did not find any city with that name üê∏\r\n            </h2>\r\n          ) : (\r\n            <>\r\n              <CardContainer arrayActivities={arrayActivities} />\r\n            </>\r\n          )\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Result;\r\n","/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/Weather.js",[],"/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/CardContainer.js",[],"/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/ApiKeyTourism.js",[],"/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/ApiKeyMeteo.js",[],"/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/Search.js",["45","46","47"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Search.css\";\r\nimport Img from \"../Image/setting.png\";\r\nimport apiKey from \"./ApiKeyMeteo\";\r\nimport Filter from \"./Filter\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\n\r\nconst Search = (props) => {\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [showwhen, setShowwhen] = useState(false);\r\n  const [meteo, setMeteo] = useState([]);\r\n  const [dropdown, setDropdown] = useState(\"Tomorrow\");\r\n  const [day, setDay] = useState([]);\r\n\r\n  const getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(getCoordinates);\r\n    } else {\r\n      alert(\"Geolocation is not supported by this browser\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getLocation();\r\n  }, []);\r\n\r\n  const getCoordinates = (position) => {\r\n    const city = fetch(\r\n      `http://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${apiKey}`,\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => setCityName(res.name));\r\n  };\r\n  const handleChange = (event) => {\r\n    setCityName(event.target.value);\r\n  };\r\n\r\n  const search = (evt) => {\r\n    if (!cityName) return;\r\n    //weatherbis\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}`,\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setMeteo(result.list);\r\n        props.passCity(\"\");\r\n        props.passCity(cityName);\r\n      })\r\n      .then((res) => {\r\n        if (res) props.passCity(res.city.name);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.passCity(\"\");\r\n    props.passCity(cityName);\r\n    if (meteo) props.passMeteoLater(\r\n      meteo.find(\r\n        (meteoInTime) =>\r\n          meteoInTime.dt_txt.includes(\"12:00:00\") &&\r\n          dtToDate(meteoInTime.dt).includes(day),\r\n      ),\r\n    );\r\n  }, [meteo, day]);\r\n\r\n  let today = new Date();\r\n\r\n  let tomorrow = new Date();\r\n  tomorrow.setDate(today.getDate() + 1);\r\n\r\n  let dayTwo = new Date();\r\n  dayTwo.setDate(today.getDate() + 2);\r\n\r\n  let dayThree = new Date();\r\n  dayThree.setDate(today.getDate() + 3);\r\n\r\n  let dayFour = new Date();\r\n  dayFour.setDate(today.getDate() + 4);\r\n\r\n  const localString = (date) => {\r\n    return date.toLocaleDateString();\r\n  };\r\n\r\n  const dtToDate = (dt) => {\r\n    return new Date(dt * 1000).toLocaleString();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!showwhen) props.loadweather(e);\r\n    else {\r\n      search();\r\n    }\r\n  };\r\n\r\n  const filters = [\r\n    {\r\n      checked: props.filterAdult,\r\n      filterName: \"Adult\",\r\n      filterPic: <AiIcons.AiFillHome />,\r\n      passChecked: props.passFilterAdult,\r\n    },\r\n    {\r\n      checked: props.filterRest,\r\n      filterName: \"Food\",\r\n      filterPic: <BiIcons.BiRestaurant />,\r\n      passChecked: props.passFilterRest,\r\n    },\r\n    {\r\n      checked: props.filterRelig,\r\n      filterName: \"Religion\",\r\n      filterPic: <BiIcons.BiChurch />,\r\n      passChecked: props.passFilterRelig,\r\n    },\r\n    {\r\n      checked: props.filterShop,\r\n      filterName: \"Shopping\",\r\n      filterPic: <AiIcons.AiFillShopping />,\r\n      passChecked: props.passFilterShop,\r\n    },\r\n    {\r\n      checked: props.filterSport,\r\n      filterName: \"Sport\",\r\n      filterPic: <BiIcons.BiRun />,\r\n      passChecked: props.passFilterSport,\r\n    },\r\n  ];\r\n  return (\r\n    <div id=\"searchFunction\" className={`i${props.icon}`}>\r\n      <p className=\"discoverActivity\">Discover Your Activity</p>\r\n      <p className=\"descriptionDiscover\">\r\n        Even if the weather is bad, there is an activity for you!\r\n      </p>\r\n\r\n      <div>{props.error ? error() : null}</div>\r\n      <form className=\"formInput\" onSubmit={handleSubmit}>\r\n        <div className=\"inputSearchBar\">\r\n          <div className=\"locationSearchBar\">\r\n            <input\r\n              id=\"city\"\r\n              type=\"text\"\r\n              placeholder=\"City\"\r\n              value={cityName}\r\n              onChange={handleChange}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"when\">\r\n            {\" \"}\r\n            <span className=\"letsGo\">GO!</span>\r\n            <p>Later</p>\r\n            <input\r\n              id=\"later\"\r\n              type=\"checkbox\"\r\n              onChange={() => {\r\n                setShowwhen(!showwhen);\r\n                props.toggleLater();\r\n                search();\r\n              }}\r\n            />\r\n             {showwhen ? (\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <select\r\n                  value={dropdown}\r\n                  onChange={(e) => {\r\n                    setDropdown(e.target.value);\r\n                    setDay(e.target.value);\r\n                  }}\r\n                  className='dropdownLater'\r\n                >\r\n                  <option value={localString(tomorrow)}>Tomorrow</option>\r\n                  <option value={localString(dayTwo)}>dans 2 jours</option>\r\n                  <option value={localString(dayThree)}>dans 3 jours</option>\r\n                  <option value={localString(dayFour)}>dans 4 jours</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n          </div>\r\n\r\n          <div id=\"filterDescription\">\r\n            <p id=\"textFilter\"> Categories</p>\r\n            <img\r\n              src={Img}\r\n              alt=\"setting\"\r\n              id=\"setting\"\r\n              onClick={() => setShow(!show)}\r\n            ></img>\r\n          </div>\r\n        </div>\r\n        \r\n        {show ? (\r\n          <ul className= \"filterContainer\">\r\n            {filters.map((f, i) => (\r\n              <Filter\r\n                key={f.filterName + i}\r\n                checked={f.checked}\r\n                filterName={f.filterName}\r\n                filterPic={f.filterPic}\r\n                passChecked={f.passChecked}\r\n              />\r\n            ))}\r\n          </ul>\r\n        ) : null}\r\n        <button type=\"submit\" id=\"send\">\r\n          {\" \"}\r\n          Search\r\n        </button>\r\n        <div className=\"errorWeather\">{props.error ? error() : null}</div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction error() {\r\n  return \"Please enter city! üê∏\";\r\n}\r\n\r\nexport default Search;\r\n","/Users/Samantha/Documents/Education/Wild/Projet2/final/remote-js-202011-froggy-devs/src/components/Filter.js",[],{"ruleId":"48","severity":1,"message":"49","line":92,"column":6,"nodeType":"50","endLine":92,"endColumn":30,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":26,"column":6,"nodeType":"50","endLine":26,"endColumn":8,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":29,"column":11,"nodeType":"56","messageId":"57","endLine":29,"endColumn":15},{"ruleId":"48","severity":1,"message":"58","line":66,"column":6,"nodeType":"50","endLine":66,"endColumn":18,"suggestions":"59"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'city', 'offset', and 'rain'. Either include them or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has a missing dependency: 'getLocation'. Either include it or remove the dependency array.",["61"],"no-unused-vars","'city' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'cityName' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["62"],{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [arrayActivities, city, offset, props, rain]",{"range":"69","text":"70"},"Update the dependencies array to be: [getLocation]",{"range":"71","text":"72"},"Update the dependencies array to be: [meteo, day, props, cityName]",{"range":"73","text":"74"},[3556,3580],"[arrayActivities, city, offset, props, rain]",[857,859],"[getLocation]",[1976,1988],"[meteo, day, props, cityName]"]